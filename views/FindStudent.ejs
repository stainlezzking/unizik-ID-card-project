<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <meta name="description" content="a Unizik project by a student of the school in Mathematics 300L who goes by the name of stanley Chukwuebuka Azuka">
    <link rel="stylesheet" href="static/headerStyles.css"/>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
    <script src="https://rawgit.com/sitepoint-editors/jsqrcode/master/src/qr_packed.js"></script>
    <link rel="shortcut icon" href="static/logo.png">
</head>
<style>
    *{
        box-sizing: border-box;
    }
    body {
        height: 100vh;
        display: flex;
        flex-direction: column;
    }
    .camera_case{
        flex-grow: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: scroll;
    }
    .camera_case::-webkit-scrollbar{
        display: none;
    }
    #barCode {
        width: 100%;
        max-width: 600px;
    }
    .preview {
        width: 100%;
        margin:0px auto;
        padding-bottom:10px;
        height: 60%;
        background: red;
        display: block;
    }
 .loader {
  animation: spin 1s infinite linear;
  border: solid 2vmin transparent;
  border-radius: 50%;
  border-right-color: #09f;
  border-top-color: #09f;
  box-sizing: border-box;
  height: 20vmin;
  left: calc(50% - 10vmin);
  position: absolute;
  top: calc(50% - 10vmin);
  width: 20vmin;
  z-index: 1;
}
.loader:before {
  animation: spin 2s infinite linear;
  border: solid 2vmin transparent;
  border-radius: 50%;
  border-right-color: #3cf;
  border-top-color: #3cf;
  box-sizing: border-box;
  content: "";
  height: 16vmin;
  left: 0;
  position: absolute;
  top: 0;
  width: 16vmin;
}
.loader:after {
  animation: spin 3s infinite linear;
  border: solid 2vmin transparent;
  border-radius: 50%;
  border-right-color: #6ff;
  border-top-color: #6ff;
  box-sizing: border-box;
  content: "";
  height: 12vmin;
  left: 2vmin;
  position: absolute;
  top: 2vmin;
  width: 12vmin;
}
.camera_case__child{
    width: 100vw;
    position: absolute;
    height: 100%;
    transition: top .6s ease, left .6s ease-in-out;
}
#searchInput {
    max-width: 440px;
    margin: 0 auto;
}
.in_view{
    top: 0;
    left: 0;
}
.off_view{
    top: 0;
    left: 100vw;
}
.alert{
    position: absolute;
    top: -10%;
    left: 50%;
    transform: translate(-50%, 0);
    opacity: .2;
    margin: 0 auto;
    transition: left .25s ease-in-out, top .9s ease-in;
}

.showAlert{
    top: 20%;
    opacity: .7;
}
@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

    
</style>
<body>
    <div id="signal" class="alert alert-danger" role="alert">
    </div>
    <header class="container-fluid bg-light d-flex align-items-center">
        <a href="/" class="brand">
            <img src="static/unizik.png" class="img-fluid" alt="the university of unizik brand">        
        </a>
        <div class="details">
            <h2> verify a student's status </h2>
            <div>
                <small class="text-success"> Scan the barcode behind the ID card to find a student</small>
            </div>
        </div>
    </header>
<section class="camera_case">
    <div class="flex-grow-1 d-flex align-items-center justify-content-center camera_case__child in_view " data-selection="method">
            <button class="btn btn-success p-2 me-2" data-target="searchBar" > Search with regNumber</button>
            <button class="btn btn-primary p-2" id="btn-scan-qr" data-target="barCode"> scan bar code </button>
    </div>
    <div class="camera_case__child align-items-center justify-content-center bg-light d-flex off_view">
        <div class="loader"> </div>
        <section id="searchBar" class="w-100">
            <form id="form">
                <div class="input-group input-group-lg">
                    <input type="search"  id="searchInput" class="form-control " placeholder="search by registration number">
                </div>
            </form>
            <button class="btn btn-danger mx-auto d-block my-4 cancel"> cancel</button>

        </section>
        <section id="barCode">
            <button class="btn btn-danger mx-auto my-2 cancel"> cancel</button>
            <canvas hidden="" id="qr-canvas" class="preview"></canvas>

        </section>


    </div>

</section>
<script src="static/qrcodeScanner.js"></script>
<script>
        // cdn="http://rawgit.com/schmich/instascan-builds/master/instascan.min.js"

var qrcode = window.qrcode;
const form = document.querySelector("#form")
const video = document.createElement("video");
const canvasElement = document.getElementById("qr-canvas");
const canvas = canvasElement.getContext("2d");


const qrResult = document.getElementById("qr-result");
const btnScanQR = document.getElementById("btn-scan-qr");

let scanning = false;
    
    document.querySelectorAll("div[data-selection=method] button").forEach(button=>{
        button.addEventListener("click", (e)=>{
            e.target.getAttribute("data-target")=== "barCode" ? launchCamera() : null ;
            // get the second camera_case_child div and set its children to display none except the target
            Array.from(e.target.parentElement.nextElementSibling.children).forEach(child=> child.id === e.target.getAttribute("data-target")  ? child.style.display= "block" : child.style.display = "none")
            e.target.parentElement.nextElementSibling.classList.remove("off_view")
            e.target.parentElement.nextElementSibling.classList.add("in_view")
            e.target.parentElement.classList.remove("in_view")
            e.target.parentElement.classList.add("off_view")
        })
    })


// ############## from here is for ###############
//   icing, make the outline red when the input format is wrong
form.querySelector("input").addEventListener("keydown",(e)=>{
      if(!(/^[0-9]/.test(e.target.value.trim()))){
        e.target.style.boxShadow = "0 0 0 0.25rem rgb(220 53 69 / 50%)";
      }
      if((/^[0-9]/.test(e.target.value.trim()))){
        e.target.style.boxShadow = "0 0 0 0.25rem rgb(13 110 253 / 50%)";
      }
     
  })

 form.addEventListener("submit", (e)=>{
      e.preventDefault()
      const reg = form.querySelector("input").value.trim()
      try{
            if(!(/^[0-9]{10}$/.test(reg))){
                throw " your regnumber is incorrect"
            }
           makeCall(reg)
      }catch(err){
            handleAlert(err)
      }
  })
// ############## to here is for the input form ############

//  cancel button to go back to page default way
    document.querySelectorAll("button.cancel").forEach(cancel=>{
        cancel.onclick = function(e){
            // checking if the button element has a sibling after it : only the canvas element is after the button, so scanner stop 
       e.target.nextElementSibling ? stopShooting() : null ;
       const inView = document.querySelector(".in_view")
       const offView = document.querySelector(".off_view")
       offView.classList.remove("off_view")
       offView.classList.add("in_view")
       inView.classList.remove("in_view")
       inView.classList.add("off_view")
    }
    })

// when info has been scanned
 qrcode.callback = res => {
  if (res) {
    document.querySelector(".loader").style.display = "block"
    makeCall(res)
    stopShooting()
};
   
}

// function to stop the camera
function stopShooting(){
    scanning = false;

    video.srcObject.getTracks().forEach(track => {
    track.stop();
    });
    canvasElement.hidden = true;
    btnScanQR.hidden = false;
}


function launchCamera(){
    navigator.mediaDevices
    .getUserMedia({ video: { facingMode: "environment" } })
    .then(function(stream) {
      scanning = true;
      btnScanQR.hidden = true;
      canvasElement.hidden = false;
      video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
      video.srcObject = stream;
      video.play();
      tick();
      scan();
    });
}

function tick() {
  canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);

  scanning && requestAnimationFrame(tick);
}

function scan() {
  try {
    qrcode.decode();
  } catch (e) {
    setTimeout(scan, 300);
  }
}

    //  request
function makeCall(reg){
    try{
                    fetch("/findStudent",{
                    method: "POST",
                    headers: {"Content-Type": "application/json"},
                    body: JSON.stringify({regNumber: reg})
                })
                .then(data=> data.json())
                .then((data)=>{
                document.querySelector(".loader").style.display = "none"
                if(data.err){
                        handleAlert(data.err)
                        scanner.start()
                        document.querySelector("#barCode").style.display = "block"
                        document.querySelector("#barCode button").style.display = "block"
                    }
                if(data.success){
                        document.querySelector("body").innerHTML = data.success
                    }
                })
     }catch(err){
                    console.log(err)
                }
}

// function to call alert box
function handleAlert(message){
    document.querySelector("#signal").innerText = message
    document.querySelector("#signal").classList.add("showAlert")
    setTimeout(()=>{
    document.querySelector("#signal").classList.remove("showAlert")
    },3000)
}

</script>
</section>
</body>
</html>